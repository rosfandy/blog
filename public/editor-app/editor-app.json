[
  {
    "content": "\n            <h1 class=\"notion-heading_1 notion-color-default\">\n                Build Editor App Like Notion\n            </h1>\n        \n            <hr class=\"notion-divider\" />\n        \n            <p>\n                Collab Editor : <a href=\"https://colab-io.vercel.app/\" class=\"notion-text-href\">https://colab-io.vercel.app/</a>\n            </p>\n        \n            <h2 class=\"notion-heading_2 notion-color-default\">\n                Library\n            </h2>\n        \n            <hr class=\"notion-divider\" />\n        \n            <p>\n                Untuk membuat <b class=\"notion-text-bold\">Collaboration Editor App</b><i class=\"notion-text-italic\"> </i>salah satu library yang dapat digunakan adalah <code class=\"notion-text-code\"><b class=\"notion-text-bold\">TipTap</b></code><b class=\"notion-text-bold\"> </b>. Library ini <i class=\"notion-text-italic\">open source, </i>dan dibangun menggunakan <a href=\"https://prosemirror.net/docs/\" class=\"notion-text-href\">Prosemirror</a>.\n            </p>\n        \n            <h2 class=\"notion-heading_2 notion-color-default\">\n                Create Editor\n            </h2>\n        \n            <hr class=\"notion-divider\" />\n        \n            <p>\n                1. Import library\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-css\">import { Editor, EditorContent } from '@tiptap/vue-3'\nimport StarterKit from '@tiptap/starter-kit'</code></pre>\n                \n            </div>\n        \n            <p>\n                Dua library ini merupakan library yang dibutuhkan untuk membuat editor.\n            </p>\n        <ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                 <code class=\"notion-text-code\">StarterKit</code> : Merupakan function yang didalamnya mendefinisikan extension yang akan digunakan di TipTap Editor. Setiap Extension perlu di-definisikan sebelum di-registrasi agar dapat digunakan. Secara default TipTap sudah mendefinisikan extension bawaan di dalam <i class=\"notion-text-italic\">Starterkit</i>. ( Docs : <a href=\"https://tiptap.dev/api/extensions/starter-kit\" class=\"notion-text-href\">StarterKit</a> )\n            </li>\n        </ul><ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                <code class=\"notion-text-code\">Editor</code> : Function untuk men-generate Editor\n            </li>\n        </ul><ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                <code class=\"notion-text-code\">EditorContent</code> : Komponen yang digunakan untuk me-render Editor\n            </li>\n        </ul>\n            <p>\n                \n            </p>\n        \n            <p>\n                2. <code class=\"notion-text-code\"><b class=\"notion-text-bold\">Editor.vue</b></code>\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-css\">&#60;template&#62;\n  &#60;editor-content :editor=\"editor\" /&#62;\n&#60;/template&#62;\n\n&#60;script&#62;\nimport { Editor, EditorContent } from '@tiptap/vue-2'\nimport StarterKit from '@tiptap/starter-kit'\n\nexport default {\n  components: {\n    EditorContent,\n  },\n\n  data() {\n    return {\n      editor: null,\n    }\n  },\n\n  mounted() {\n    this.editor = new Editor({\n      content: '&#60;p&#62;I&#8217;m running Tiptap with Vue.js. 🎉&#60;/p&#62;',\n      extensions: [\n        StarterKit,\n      ],\n    })\n  },\n\n  beforeDestroy() {\n    this.editor.destroy()\n  },\n}\n&#60;/script&#62;</code></pre>\n                \n            </div>\n        \n            <h2 class=\"notion-heading_2 notion-color-default\">\n                Extensions\n            </h2>\n        \n            <hr class=\"notion-divider\" />\n        \n            <p>\n                Seperti halnya rak dan buku, sebuah ekstensi perlu didefinisikan wadahnya terlebih dahulu sebelum di-registrasi ke Editor. Secara default, ekstensi bawaan TipTap, wadah ini sudah didefiniskan di <code class=\"notion-text-code\">StarterKit</code>. Setelah itu baru me-register ekstensi yang ingin digunakan. \n            </p>\n        \n            <hr class=\"notion-divider\" />\n        \n            <p>\n                Contoh penambahan <code class=\"notion-text-code\"><b class=\"notion-text-bold\">extensions</b></code> pada <code class=\"notion-text-code\"><b class=\"notion-text-bold\">TipTap</b></code>:\n            </p>\n        \n            <p>\n                1. Import Library\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-css\">import Heading from '@tiptap/extension-heading'\nimport ListItem from '@tiptap/extension-list-item'</code></pre>\n                \n            </div>\n        \n            <p>\n                2. Register <code class=\"notion-text-code\"><b class=\"notion-text-bold\">extensions</b></code> pada Editor\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-css\">this.editor = new Editor({\n      extensions: [\n        StarterKit,\n\n\t\t\t\t// Registrasi ekstensi \n\t\t\t\tListItem,\n\t\t\t\tHeading.configure({\n\t        levels: [1, 2, 3],\n\t        HTMLAttributes: {\n\t            class: 'heading',\n\t\t\t    },\n\t\t    }),\n\n      ],\n    })</code></pre>\n                \n            </div>\n        \n            <p>\n                Source : <a href=\"https://tiptap.dev/extensions\" class=\"notion-text-href\">https://tiptap.dev/extensions</a>\n            </p>\n        \n            <h2 class=\"notion-heading_2 notion-color-default\">\n                Custom Extensions\n            </h2>\n        \n            <hr class=\"notion-divider\" />\n        \n            <p>\n                Untuk membuat <i class=\"notion-text-italic\">functionality </i>pada custom extension ( bukan bawaan TipTap ), perlu memahami <i class=\"notion-text-italic\"><a href=\"https://tiptap.dev/guide/prosemirror\" class=\"notion-text-href\">prosemirror</a></i><i class=\"notion-text-italic\">. </i>Di bawah ini hanya contoh untuk menambahkan extension custom ke Editor TipTap (add HTML DOM Element)\n            </p>\n        \n            <hr class=\"notion-divider\" />\n        \n            <p>\n                Dalam membuat node hal-hal yang perlu diperhatikan :\n            </p>\n        \n            <p>\n                1. <b class=\"notion-text-bold\">Schema </b>: ini adalah logic untuk <i class=\"notion-text-italic\">content </i>dari komponen node itu sendiri, beberapa contoh schema yang umum digunakan :\n            </p>\n        <ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                <code class=\"notion-text-code\">inline*</code> ⇒ dalam block, semua tipe <i class=\"notion-text-italic\">node </i>dalam <i class=\"notion-text-italic\">block </i>diperbolehkan. ini bekerja jika terdapat perubahan <u class=\"notion-text-underline\"><b class=\"notion-text-bold\">tipe</b></u><b class=\"notion-text-bold\"> </b><i class=\"notion-text-italic\">node </i>dalam <i class=\"notion-text-italic\">block. </i>\n            </li>\n        </ul>\n            <p>\n                Contoh ⇒ <b class=\"notion-text-bold\">Bold</b>, <b class=\"notion-text-bold\">Italic</b>, <b class=\"notion-text-bold\">Underline</b>, <b class=\"notion-text-bold\">Link</b>, <b class=\"notion-text-bold\">Paragraph</b>, dll\n            </p>\n        <ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                <code class=\"notion-text-code\">block+</code> ⇒ dalam <i class=\"notion-text-italic\">block</i>, minimal terdapat satu <i class=\"notion-text-italic\">node</i>. Secara default tipe <i class=\"notion-text-italic\">node </i>dalam editor untuk setiap <i class=\"notion-text-italic\">block</i> adalah <i class=\"notion-text-italic\">paragraph</i>. \n            </li>\n        </ul>\n            <p>\n                Contoh ⇒ <b class=\"notion-text-bold\">Blockquote </b>( membungkus <i class=\"notion-text-italic\">paragraph</i> menjadi <i class=\"notion-text-italic\">Blockquote</i>), <b class=\"notion-text-bold\">Callout</b>, dll\n            </p>\n        \n            <p>\n                \n            </p>\n        \n            <p>\n                \n            </p>\n        \n            <p>\n                2. <b class=\"notion-text-bold\">Commands </b>: Editor Tiptap, untuk membuat <i class=\"notion-text-italic\">node </i>diperlukan <i class=\"notion-text-italic\">commands </i>untuk mengeksekusi penambahan <i class=\"notion-text-italic\">node</i>. Beberapa contoh list <i class=\"notion-text-italic\">commands </i>yang digunakan :\n            </p>\n        <ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                <code class=\"notion-text-code\">setNode</code> : ini akan <b class=\"notion-text-bold\">merubah </b><i class=\"notion-text-italic\">node </i>dalam <i class=\"notion-text-italic\">block </i>saat ini sesuai dengan tipe <i class=\"notion-text-italic\">node </i>yang diinginkan.  Schema ⇒ <code class=\"notion-text-code\">inline*</code>\n            </li>\n        </ul><ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                <code class=\"notion-text-code\">wrapIn</code> : ini akan <b class=\"notion-text-bold\">membungkus </b><i class=\"notion-text-italic\">node </i>dalam <i class=\"notion-text-italic\">block </i>saat ini. Schema ⇒ <code class=\"notion-text-code\">block+</code>\n            </li>\n        </ul><ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                <code class=\"notion-text-code\">insertContent</code> : ini akan <b class=\"notion-text-bold\">merubah dan menampilkan</b> content <i class=\"notion-text-italic\">node </i>dalam <i class=\"notion-text-italic\">block </i>saat ini dengan <u class=\"notion-text-underline\"><b class=\"notion-text-bold\">parameter</b></u> tertentu. Schema ⇒ umumnya <code class=\"notion-text-code\">inline*</code> atau tanpa schema untuk <i class=\"notion-text-italic\">commands </i>ini masih bisa. ( sesuai kebutuhan ).\n            </li>\n        </ul>\n            <p>\n                Contoh ⇒ <b class=\"notion-text-bold\">Image</b>, <b class=\"notion-text-bold\">Video</b>, <b class=\"notion-text-bold\">Youtube</b>, <b class=\"notion-text-bold\">Bookmark </b>\n            </p>\n        \n            <p>\n                source : <a href=\"https://tiptap.dev/api/schema#the-node-schema\" class=\"notion-text-href\">https://tiptap.dev/api/schema#the-node-schema</a>\n            </p>\n        \n            <p>\n                \n            </p>\n        \n            <p>\n                3.<b class=\"notion-text-bold\"> Render HTML </b>: dalam Editor <code class=\"notion-text-code\"><b class=\"notion-text-bold\">TipTap</b></code> ada banyak <i class=\"notion-text-italic\">methods </i>untuk me-render komponen HTML. Contoh <i class=\"notion-text-italic\">methods </i>yang dapat digunakan :\n            </p>\n        <ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                <code class=\"notion-text-code\">renderHTML()</code> : ini akan merender HTML beserta attribute dalam Editor <code class=\"notion-text-code\"><b class=\"notion-text-bold\">TipTap</b></code>\n            </li>\n        </ul><ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                <code class=\"notion-text-code\">addNodeView()</code> : ini memungkinkan untuk merender HTML dan memanipulasi DOM komponen pada HTML. <i class=\"notion-text-italic\">Method </i>ini lebih <i class=\"notion-text-italic\">advance</i>, bisa digunakan untuk me-render komponen dalam <i class=\"notion-text-italic\">Vue / React</i>. \n            </li>\n        </ul>\n            <p>\n                Contoh dengan Vue / React : <a href=\"https://tiptap.dev/guide/node-views/examples\" class=\"notion-text-href\">https://tiptap.dev/guide/node-views/examples</a>\n            </p>\n        \n            <h3 class=\"notion-heading_3 notion-color-default\">\n                Membuat Node \n            </h3>\n        \n            <hr class=\"notion-divider\" />\n        \n            <p>\n                <code class=\"notion-text-code\"><b class=\"notion-text-bold\">CustomNode.js</b></code>\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-css\">import { Node } from '@tiptap/core'\n\nconst CustomNode = Node.create({\n  name: 'customNode',\n\tgroup: 'block', // ini wajib untuk menambahkan node ke dalam block\n  content: 'block+', // ubah schema tergantung pada commands (wrapIn atau setNode)\n\t// Your code goes here.\n\trenderHTML({ HTMLAttributes }){\n    const attrs = mergeAttributes(HTMLAttributes, { class: 'customNode' });\n    return ['div', attrs, 0];\n  },\n  addCommands() {\n        return {\n            setCustomNode: (options) =&#62; ({ commands }) =&#62; { // beri nama commands untuk extension\n                const command = commands.wrapIn(this.name); // set schema block+\n                // const command = commands.setNode(this.name); // set schema inline*\n\t\t\t\t\t\t\t  // const command = commands.insertContent({\n                //    type: this.name,\n                //    attrs: options,\n                // });\n                return command\n            },\n        };\n   },\n\t\t/* contoh jika menggunakan addNodeView(), renderHTML akan tertimpa\n\t\t   notes: jika menggunakan param akan bekerja menggunakan commands = insertContent\n    */\n\taddNodeView() {\n        return (options) =&#62; {\n            const container = document.createElement('div');\n\t\t\t\t\t\tconst content = document.createElement('div')\n\n\t\t\t\t\t\tcontainer.classList.add('customNode');\n\t\t\t\t\t\tcontainer.appendChild(content)\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn {\n                dom: container,\n\t\t\t\t\t\t\t\tcontentDOM: content,\n            };\n\t\t\t\t}\n  }\n\n})</code></pre>\n                \n            </div>\n        \n            <hr class=\"notion-divider\" />\n        \n            <h3 class=\"notion-heading_3 notion-color-default\">\n                Membuat Wadah ( men-definsikan <i class=\"notion-text-italic\">extensions </i>)\n            </h3>\n        \n            <hr class=\"notion-divider\" />\n        \n            <p>\n                <code class=\"notion-text-code\"><b class=\"notion-text-bold\">customExt/index.js</b></code>\n            </p>\n        \n            <div class=\"notion-code\">\n                <pre><code class=\"language-css\">// Import Library\nimport { Extension } from \"@tiptap/core\"\nimport { CustomNode } from \"./CustomNode\"\n\nexport const CustomExtension= Extension.create({\n    name: \"customExt\", // parameter nama extension\n\n    addExtensions() {\n        //  ekstensi yang ingin di definisikan\n\t\t\t\tconst extensions = [];\n\t\t\t\textensions.push(customNode);\n\t\n        return extensions \n\t\t}\n})\n\nexport default CustomExtension</code></pre>\n                \n            </div>\n        \n            <h3 class=\"notion-heading_3 notion-color-default\">\n                Me-register wadah <i class=\"notion-text-italic\">extension </i>ke dalam Editor\n            </h3>\n        \n            <hr class=\"notion-divider\" />\n        <ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                Import <i class=\"notion-text-italic\">extension</i>\n            </li>\n        </ul>\n            <div class=\"notion-code\">\n                <pre><code class=\"language-javascript\">import { CustomExtension} from './customExt'</code></pre>\n                \n            </div>\n        <ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                Register <i class=\"notion-text-italic\">extension</i>\n            </li>\n        </ul>\n            <div class=\"notion-code\">\n                <pre><code class=\"language-javascript\">this.editor = new Editor({\n      extensions: [\n        StarterKit,\n\t\t\t\t// Registrasi ekstensi \n\t\t\t\tListItem,\n\t\t\t\tHeading.configure({\n\t        levels: [1, 2, 3],\n\t        HTMLAttributes: {\n\t            class: 'heading',\n\t\t\t    },\n\t\t    }),\n\t\t\t\tCustomExtension,\n      ],\n})</code></pre>\n                \n            </div>\n        <ul class=\"notion-bulleted_list\">\n            <li class=\"notion-bulleted_list_item notion-color-default\">\n                Setelah me-register extension, maka dapat memanggil extension dengan command yang sudah diset sebelumnya yaitu <code class=\"notion-text-code\">setCustomNode()</code>\n            </li>\n        </ul>\n            <div class=\"notion-code\">\n                <pre><code class=\"language-javascript\">this.editor.command.setCustomNode() // ini akan memberika block-node bertipe customNode</code></pre>\n                \n            </div>\n        \n            <p>\n                \n            </p>\n        \n            <p>\n                Reference :\n            </p>\n        \n        <a href=\"https://tiptap.dev/guide/custom-extensions/#create-new-extensions\" target=\"_blank\" class=\"notion-bookmark\" target=\"_blank\">https://tiptap.dev/guide/custom-extensions/#create-new-extensions</a>\n    \n        <a href=\"https://tiptap.dev/guide/prosemirror\" target=\"_blank\" class=\"notion-bookmark\" target=\"_blank\">https://tiptap.dev/guide/prosemirror</a>\n    \n        <a href=\"https://tiptap.dev/api/schema#the-node-schema\" target=\"_blank\" class=\"notion-bookmark\" target=\"_blank\">https://tiptap.dev/api/schema#the-node-schema</a>\n    \n            <p>\n                \n            </p>\n        \n            <hr class=\"notion-divider\" />\n        \n            <p>\n                \n            </p>\n        \n            <p>\n                This article was made using <a href=\"http://notion.so/\" class=\"notion-text-href\">notion.so</a> ❣️\n            </p>\n        \n            <p>\n                \n            </p>\n        \n            <hr class=\"notion-divider\" />\n        \n            <p>\n                \n            </p>\n        ",
    "properties": {
      "Tags": {
        "id": "%60YN%5E",
        "type": "multi_select",
        "multi_select": [
          {
            "id": "12d12bac-c37a-4726-9b1d-23409dff644d",
            "name": "frontend",
            "color": "yellow"
          },
          {
            "id": "2056cfd5-26c1-4ead-888d-d3a0ebba890d",
            "name": "vuejs",
            "color": "default"
          },
          {
            "id": "653ccfa5-d24b-4239-a3df-735b6498e615",
            "name": "collaboration",
            "color": "brown"
          }
        ]
      },
      "path": {
        "id": "e%3CJu",
        "type": "rich_text",
        "rich_text": [
          {
            "type": "text",
            "text": {
              "content": "editor-app",
              "link": null
            },
            "annotations": {
              "bold": false,
              "italic": false,
              "strikethrough": false,
              "underline": false,
              "code": false,
              "color": "default"
            },
            "plain_text": "editor-app",
            "href": null
          }
        ]
      },
      "Created by": {
        "id": "lt%3BJ",
        "type": "created_by",
        "created_by": {
          "object": "user",
          "id": "a3bf067d-0428-4d79-ba49-8f16f0b562b2"
        }
      },
      "thumbnail": {
        "id": "ob%60s",
        "type": "files",
        "files": [
          {
            "name": "editor.png",
            "type": "file",
            "file": {
              "url": "https://prod-files-secure.s3.us-west-2.amazonaws.com/feb3e241-4a24-49ca-97bd-e9294678876f/e64240d3-ded8-4815-87a6-a58b5f297ccd/editor.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20231115%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20231115T173453Z&X-Amz-Expires=3600&X-Amz-Signature=fc2aad1bb24256591424fb2ffceaca44e452636098e6a0fbf25aeee47babaddf&X-Amz-SignedHeaders=host&x-id=GetObject",
              "expiry_time": "2023-11-15T18:34:53.667Z"
            }
          }
        ]
      },
      "Status": {
        "id": "qrai",
        "type": "status",
        "status": {
          "id": "K[FO",
          "name": "Published",
          "color": "green"
        }
      },
      "Slug": {
        "id": "tg%3B%3E",
        "type": "rich_text",
        "rich_text": [
          {
            "type": "text",
            "text": {
              "content": "editor-app",
              "link": null
            },
            "annotations": {
              "bold": false,
              "italic": false,
              "strikethrough": false,
              "underline": false,
              "code": false,
              "color": "default"
            },
            "plain_text": "editor-app",
            "href": null
          }
        ]
      },
      "title": {
        "id": "zG~e",
        "type": "rich_text",
        "rich_text": [
          {
            "type": "text",
            "text": {
              "content": "Build Collaboration Editor App Like Notion",
              "link": null
            },
            "annotations": {
              "bold": false,
              "italic": false,
              "strikethrough": false,
              "underline": false,
              "code": false,
              "color": "default"
            },
            "plain_text": "Build Collaboration Editor App Like Notion",
            "href": null
          }
        ]
      },
      "createdAt": {
        "id": "~%3C%7BT",
        "type": "date",
        "date": {
          "start": "2023-11-14",
          "end": null,
          "time_zone": null
        }
      },
      "Name": {
        "id": "title",
        "type": "title",
        "title": [
          {
            "type": "text",
            "text": {
              "content": "editor-app",
              "link": null
            },
            "annotations": {
              "bold": false,
              "italic": false,
              "strikethrough": false,
              "underline": false,
              "code": false,
              "color": "default"
            },
            "plain_text": "editor-app",
            "href": null
          }
        ]
      }
    }
  }
]